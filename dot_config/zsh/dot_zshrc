# ~/.zshrc

##################################################
# initialize
##################################################

source "${ZDOTDIR:-~}/.initialize.zsh"

##################################################
# plugins
##################################################

# Set the name of the static .zsh plugins file antidote will generate.
zsh_plugins=${ZDOTDIR:-~}/plugins/.zsh_plugins.zsh

# Ensure you have a .zsh_plugins.txt file where you can add plugins.
[[ -f ${zsh_plugins:r}.txt ]] || touch "${zsh_plugins:r}.txt"

# Lazy-load antidote.
fpath+=("${ZDOTDIR:-~}/.antidote")
autoload -Uz "${fpath[-1]}/antidote"

# Generate static file in a subshell when .zsh_plugins.txt is updated.
if [[ ! $zsh_plugins -nt ${zsh_plugins:r}.txt ]]; then
  (antidote bundle <"${zsh_plugins:r}.txt" >|"$zsh_plugins")
fi

# Source your static plugins file.
# shellcheck source=plugins/.zsh_plugins.zsh
source "$zsh_plugins"

##################################################
# Load configs
##################################################

# Execute the command for files in the directory
ExecuteCommandForFiles() {
  configs_dir=$1
  command=$2
  setopt extended_glob
  if [ -d "$configs_dir" ] && [ -r "$configs_dir" ] && [ -x "$configs_dir" ]; then
    for file in "${configs_dir}"/**; do
      [ -r "$file" ] && eval "$command" "$file"
    done
  fi
}

# Load configs at startup time
LoadConfigs() {
  ExecuteCommandForFiles "$1" "source"
}

# Lazy load configs
LazyLoadConfigs() {
  ExecuteCommandForFiles "$1" "zsh-defer source"
}

LoadConfigs "${ZDOTDIR:-~}/configs/startup"
LoadConfigs "${ZDOTDIR:-~}/plugins/configs/startup"

LazyLoadConfigs "${ZDOTDIR:-~}/plugins/configs/lazy"
