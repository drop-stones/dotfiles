# ~/.zshrc
# shellcheck shell=zsh

##################################################
# initialize
##################################################

source "${ZDOTDIR:-$HOME}/.initialize.zsh"

##################################################
# plugins manager
##################################################

# Ensure no duplicates in fpath
typeset -U fpath

# Config paths
ANTIDOTE_DIR="${ZDOTDIR:-$HOME}/.antidote"
ZSH_PLUGINS="${ZDOTDIR:-$HOME}/plugins/.zsh_plugins.zsh"

setup_antidote() {
  emulate -L zsh

  local antidote_dir=$1
  local zsh_plugins=$2

  # Ensure files/dirs
  mkdir -p "${zsh_plugins:h}"
  [[ -f ${zsh_plugins:r}.txt ]] || : >|"${zsh_plugins:r}.txt"

  # Make antidote available
  fpath+=("$antidote_dir")
  autoload -Uz antidote

  # Rebuild when needed
  if [[ ! $zsh_plugins -nt ${zsh_plugins:r}.txt ]]; then
    antidote bundle <"${zsh_plugins:r}.txt" >|"$zsh_plugins" || true
  fi
}

# 1) Only generate the bundle (do not source here)
setup_antidote "$ANTIDOTE_DIR" "$ZSH_PLUGINS"

# 2) Source the bundle at top level (safe even if plugins use `return`)
if [[ -f $ZSH_PLUGINS ]]; then
  source "$ZSH_PLUGINS" || print -u2 "warn: sourcing plugins returned non-zero; continuing"
fi

# Remove the function to avoid polluting the namespace.
unfunction setup_antidote

##################################################
# Load functions
##################################################

# Setup fpath recursively and autoload all function files.
# - Each function must live in a file whose name equals the function name (no extension).
# - Subdirectories under zfuncdir are supported.
function setup_fpath {
  emulate -L zsh -o extended_glob

  local zfuncdir=$1
  [[ -n $zfuncdir && -d $zfuncdir && -r $zfuncdir && -x $zfuncdir ]] || return 0

  # Add root and all subdirectories to fpath so autoload can find files anywhere.
  local -a dirs
  dirs=("$zfuncdir" "$zfuncdir"/**/*(N/))
  fpath+=("${dirs[@]}")

  # Collect function names (basename, no dots) and mark for autoload.
  # Exclude internal files that start with "__".
  local -a names
  names=("$zfuncdir"/**/([^.]##~__*)(.N:t))  # regular files only, no dot, not starting with "__"
  (( ${#names} )) && autoload -Uz -- "${names[@]}"
}

setup_fpath "${ZDOTDIR:-$HOME}/zfunc"

# Remove the function to avoid polluting the namespace.
unfunction setup_fpath

##################################################
# Load configs
##################################################

for-each-file "${ZDOTDIR:-$HOME}/configs/startup" source
for-each-file "${ZDOTDIR:-$HOME}/plugins/configs/startup" source
for-each-file "${ZDOTDIR:-$HOME}/plugins/configs/lazy" zsh-defer source
