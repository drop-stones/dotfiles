# ~/.zshrc

##################################################
# initialize
##################################################

source ${ZDOTDIR:-~}/.initialize.zsh

##################################################
# plugins
##################################################

# Set the name of the static .zsh plugins file antidote will generate.
zsh_plugins=${ZDOTDIR:-~}/plugins/.zsh_plugins.zsh

# Ensure you have a .zsh_plugins.txt file where you can add plugins.
[[ -f ${zsh_plugins:r}.txt ]] || touch ${zsh_plugins:r}.txt

# Lazy-load antidote.
fpath+=(${ZDOTDIR:-~}/.antidote)
autoload -Uz $fpath[-1]/antidote

# Generate static file in a subshell when .zsh_plugins.txt is updated.
if [[ ! $zsh_plugins -nt ${zsh_plugins:r}.txt ]]; then
  (antidote bundle <${zsh_plugins:r}.txt >|$zsh_plugins)
fi

# Source your static plugins file.
source $zsh_plugins

##################################################
# Load configs
##################################################

# Execute the command for files in the directory
ExecuteCommandForFiles() {
  dir=$1
  command=$2
  setopt extended_glob
  if [ -d $configs_dir ] && [ -r $configs_dir ] && [ -x $configs_dir ]; then
    for file in ${configs_dir}/**; do
      [ -r $file ] && eval $command $file
    done
  fi
}

# Load configs at startup time
LoadConfigs() {
  configs_dir=$1
  ExecuteCommandForFiles configs_dir "source"
}

# Lazy load configs
LazyLoadConfigs() {
  configs_dir=$1
  ExecuteCommandForFiles configs_dir "zsh-defer source"
}

LoadConfigs ${ZDOTDIR:-~}/plugins/configs/startup
LoadConfigs ${ZDOTDIR:-~}/configs/startup

LazyLoadConfigs ${ZDOTDIR:-~}/plugins/configs/lazy
LazyLoadConfigs ${ZDOTDIR:-~}/configs/lazy
