#!/usr/bin/env zsh

# __env_list_enable VAR [ARRAY] [SEP]
# - Tie a colon-separated scalar env var (VAR) to an array (ARRAY) via typeset -T.
# - Defaults: ARRAY = lowercased VAR (e.g., PATH -> path), SEP = ":".
# - The scalar is exported (-x), and the array is unique (-U).

function __env_list_enable {
  emulate -L zsh

  {
    local var=$1
    local arr=${2:-${1:l}}
    local sep=${3-:}

    [[ -n $var ]] || {
      print -u2 "__env_list_enable: VAR is required"
      return 2
    }

    # Tie scalar<->array; export scalar. Suppress noise if already tied.
    typeset -gxT "$var" "$arr" "$sep" 2>/dev/null || true
    # Ensure uniqueness on the array side.
    typeset -gU -- "$arr"
  } always {
    # Self-unload: this function is autoloaded ad-hoc by the caller.
    # Removing the definition here does NOT affect this ongoing invocation,
    # but keeps the functions table clean; the next call will autoload again.
    unfunction __env_list_enable
  }
}
