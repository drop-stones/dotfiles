{{ if eq .chezmoi.os "windows" }}
# Install git
scoop install git

# Fonts
scoop bucket add nerd-fonts
scoop install Hack-NF-Mono

# Terminal Emulator
scoop install windows-terminal

# Editor
scoop install neovim

# Shell Prompt
scoop install starship

# Astronvim requirements
scoop install bottom
scoop install gdu
scoop install lazygit
scoop install pwsh
scoop install ripgrep
scoop install tree-sitter
scoop install unzip

# Languages
scoop install go
scoop install lua
scoop install lua-language-server
scoop install luarocks
scoop install nodejs
scoop install python
scoop install rust

scoop install mingw
winget install Microsoft.DotNet.SDK.7
npm install -g neovim

# Commands
scoop install bat
scoop install bottom
scoop install delta
scoop install dust
scoop install eza
scoop install fd
scoop install fzf
scoop install hexyl
scoop install hyperfine
scoop install procs
scoop install ripgrep
scoop install sd
scoop install tldr
scoop install tokei
scoop install zoxide

# Windows apps
scoop install autohotkey
scoop install powertoys

# Cygwin only
if (Get-Command "pacman" -ErrorAction SilentlyContinue) {
  pacman -S tmux
}

If (!(Test-Path $PROFILE)) { New-Item -Path $PROFILE -Force }
# Add 'Invoke-Expression (& { (zoxide init powershell | Out-String) })' if not exists
If (!(Get-Content $PROFILE | Select-String -Quiet "zoxide")) {
  Add-Content -Path $PROFILE -Value "Invoke-Expression (& { (zoxide init powershell | Out-String) })"
}
# Add 'Invoke-Expression (&starship init powershell)' if not exists
If (!(Get-Content $PROFILE | Select-String -Quiet "starship")) {
  Add-Content -Path $PROFILE -Value "Invoke-Expression (&starship init powershell)"
}

# zsh in msys2
scoop install msys2
$Msys2HomePath = "$HOME\scoop\apps\msys2\current\home\$env:username"
If (Test-Path -Path $Msys2HomePath) {
  $Msys2HomeDir = Get-Item "$Msys2HomePath"
  If (!([bool]($Msys2HomeDir.Attributes -band [IO.FileAttributes]::ReparsePoint))) {
    echo "Remove $Msys2HomePath"
    Remove-Item -LiteralPath "$Msys2HomePath" -Force -Recurse
  }
}
If (!(Test-Path -Path $Msys2HomePath)) {
    echo "Create Symlink"
    New-Item -ItemType SymbolicLink -Path "$Msys2HomePath" -Target "$HOME" # symbolic link ~ -> $HOME
}
{{ end }}
